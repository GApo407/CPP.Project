#include <iostream>
using namespace std;
// 构造函数：主要作用于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用
// 析构函数：主要作用于对象销毁前系统自动调用，执行一些清理工作

// 对象的初始化和清理
class Person {
public:
    // 1.1 构造函数
    // 没有返回值 不用写oid
    // 函数名 与类名相同
    // 构造函数可以有参数，可以发生重载
    // 创建对象的时候，构造函数会自动调用，而且只有一次
    Person() {
        cout << "Person构造函数的调用" << endl;
    }

    // 2.析构函数 进行清理的操作
    // 没有返回值 不写 void
    // 函数名和类名相同 在名称前加～
    // 不可以有参数，不可以发生重载
    // 对象在销毁前 会自动调用析构函数，而且只会调用一次
    ~Person() {
        cout << "Person析构函数函数的调用" << endl;
    }
};

// 构造函数和析构函数都是必须有的实现，如果我们自己不提供，编译器会提供一个空实现的构造函数和析构函数
void test01() {
    Person p; //  在栈上的数据，test01执行完毕后，释放这个对象
}

int main() {
    test01();
    return 0;
}
